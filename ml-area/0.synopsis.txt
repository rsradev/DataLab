–ö–û–ù–°–ü–ï–ö–¢
–ö—É—Ä—Å: –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª: –ø—Ä–æ—Ñ. –ò–≤–∞–Ω –ö–æ–π—á–µ–≤


–í—ä–ø—Ä–æ—Å–∏	–ì–ª–∞–≤–∏ –æ—Ç [1]
1.	–ó–∞–¥–∞—á–∏ –Ω–∞ –ò–∑–≤–ª–∏—á–∞–Ω–µ—Ç–æ –Ω–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ë—É–ª–µ–≤ –º–æ–¥–µ–ª. –û–±—ä—Ä–Ω–∞—Ç –∏–Ω–¥–µ–∫—Å.	1
2.	–û—Ç–¥–µ–ª—è–Ω–µ –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞. –ò–∑–≥—Ä–∞–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ—á–Ω–∏—Ü–∏ –æ—Ç —Ç–µ—Ä–º–∏–Ω–∏. –°—Ç–æ–ø –¥—É–º–∏. –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è. –°–ø–∏—Å—ä—Ü–∏ —Å –∞–¥—Ä–µ—Å–∏. –í—ä–ø—Ä–æ—Å–∏-—Ñ—Ä–∞–∑–∏.	2
3.	–¢–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ –∏–∑–≤–ª–∏—á–∞–Ω–µ. –ö–æ—Ä–µ–∫—Ü–∏—è –Ω–∞ –ø—Ä–∞–≤–æ–ø–∏—Å–∞. –§–æ–Ω–µ—Ç–∏—á–Ω–∞ –∫–æ—Ä–µ–∫—Ü–∏—è.	3
4.	–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–∞–Ω–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏.¬∑ –†–∞–∑–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ –∏–Ω–¥–µ–∫—Å–∏. –î–∏–Ω–∞–º–∏—á–Ω–∏ –∏–Ω–¥–µ–∫—Å–∏.	4
5.	–ü–∞—Ä–∞–º–µ—Ç—Ä–∏—á–Ω–æ –∏ –∑–æ–Ω–∞–ª–Ω–æ –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ. –ß–µ—Å—Ç–æ—Ç–∞ –∏ —Ç–µ–≥–ª–∞ –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∏—Ç–µ. –¢–µ–≥–ª–æ–≤–∏ —Ñ—É–Ω–∫—Ü–∏–∏.	6
6.	–í–µ–∫—Ç–æ—Ä–Ω–æ-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω –º–æ–¥–µ–ª.	7
7.	–û—Ü–µ–Ω–∫–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º–∏—Ç–µ –∑–∞ –ò–∑–ò–Ω—Ñ. –ú–µ—Ä–∫–∏. –û—Ü–µ–Ω–∫–∞ –≤—ä—Ä—Ö—É –∫–æ—Ä–ø—É—Å–∏ –æ—Ç —Ç–µ–∫—Å—Ç–æ–≤–µ.	8
8.	–û–±—Ä–∞—Ç–Ω–∞ –≤—Ä—ä–∑–∫–∞ –∏ —Ä–∞–∑—à–∏—Ä—è–≤–∞–Ω–µ –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏.	9
9.	–ò–∑–≤–ª–∏—á–∞–Ω–µ –æ—Ç XML –¥–æ–∫—É–º–µ–Ω—Ç–∏.	10.1-3
10.	–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–∏ –º–æ–¥–µ–ª–∏ –≤ –ò–∑–≤–ª–∏—á–∞–Ω–µ—Ç–æ –Ω–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è	11.1-3
11.	–ú–æ–¥–µ–ª–∏ –Ω–∞ –µ–∑–∏–∫–∞. 	12
12.	–ö–ª–∞—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞ —Ç–µ–∫—Å—Ç ‚Äì –í–µ–∫—Ç–æ—Ä–Ω–æ-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω –º–æ–¥–µ–ª	14
13.	–ú–∞—à–∏–Ω–Ω–æ –æ–±—É—á–µ–Ω–∏–µ –∑–∞ –ø–æ–¥—Ä–µ–∂–¥–∞–Ω–µ (learning to rank)	15.4 +
14.	WWW: —É–µ–± —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏; —Å–ø–∞–º; —Ä–µ–∫–ª–∞–º–∏; —Ç—ä—Ä—Å–µ–Ω–µ; –∏–Ω–¥–µ–∫—Å–∏.	19.1-4
15.	WWW: –æ–±—Ö–æ–∂–¥–∞–Ω–µ –∏ –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ; —Ä–∞–∑–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ –∏–Ω–¥–µ–∫—Å–∏	20.1-2


–ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
–£–ß–ï–ë–ù–ò–ö:
1.	C. Manning P. Raghavan, H. Sch√ºtze. An Introduction to Information Retrieval. Cambridge University Press, Cambridge, England 2007
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.120.6095&rep=rep1&type=pdf

 –î–†–£–ì–ò:
2.	R. Baeza-Yates and B. Ribeiro-Neto. Modern Information Retrieval. Addison-Wesley, 1999. http://www.ischool.berkeley.edu/~hearst/irbook/
3.	van Rijsbergen, C. J. 1979. Information Retrieval. London: Butterworths. Second Edition.
http://www.dcs.gla.ac.uk/Keith/Preface.html

### 1. –ó–∞–¥–∞—á–∏ –Ω–∞ –ò–∑–≤–ª–∏—á–∞–Ω–µ—Ç–æ –Ω–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ë—É–ª–µ–≤ –º–æ–¥–µ–ª. –û–±—ä—Ä–Ω–∞—Ç –∏–Ω–¥–µ–∫—Å.
–ò–∑–≤–ª–∏—á–∞–Ω–µ—Ç–æ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (IR) –∏–º–∞ –∑–∞ —Ü–µ–ª –Ω–∞–º–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Å–ø—Ä—è–º–æ –¥–∞–¥–µ–Ω–æ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ. –û—Å–Ω–æ–≤–Ω–∏—Ç–µ –∑–∞–¥–∞—á–∏ –≤–∫–ª—é—á–≤–∞—Ç –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ, —Ç—ä—Ä—Å–µ–Ω–µ –∏ –æ—Ü–µ–Ω–∫–∞ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ. –ë—É–ª–µ–≤–∏—è—Ç –º–æ–¥–µ–ª –∏–∑–ø–æ–ª–∑–≤–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ (AND, OR, NOT) –∑–∞ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏, –Ω–æ –Ω–µ –æ—Ç—á–∏—Ç–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ. –û–±—ä—Ä–Ω–∞—Ç–∏—è—Ç –∏–Ω–¥–µ–∫—Å –µ –æ—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞ –±—ä—Ä–∑–æ —Ç—ä—Ä—Å–µ–Ω–µ, —Å—ä—Å—Ç–æ—è—â–∞ —Å–µ –æ—Ç —Å–ø–∏—Å—ä—Ü–∏ —Å –¥—É–º–∏ –∏ —Å—ä–æ—Ç–≤–µ—Ç—Å—Ç–≤–∞—â–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏.

```python
class InvertedIndex:
    def __init__(self):
        self.index = {}
    
    def add(self, word, doc_id):
        if word not in self.index:
            self.index[word] = set()
        self.index[word].add(doc_id)
    
    def search(self, query):
        return self.index.get(query, set())

index = InvertedIndex()
index.add("python", 1)
index.add("code", 1)
index.add("python", 2)
print(index.search("python"))  # {1, 2}
```

### 2. –û—Ç–¥–µ–ª—è–Ω–µ –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞. –ò–∑–≥—Ä–∞–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ—á–Ω–∏—Ü–∏ –æ—Ç —Ç–µ—Ä–º–∏–Ω–∏. –°—Ç–æ–ø –¥—É–º–∏. –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è.
–û–±—Ä–∞–±–æ—Ç–∫–∞—Ç–∞ –Ω–∞ —Ç–µ–∫—Å—Ç–∞ –≤–∫–ª—é—á–≤–∞ —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è, –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ —Å—Ç–æ–ø –¥—É–º–∏ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è. –¢–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ —Ä–∞–∑–¥–µ–ª—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Ç–¥–µ–ª–Ω–∏ –¥—É–º–∏ (—Ç–æ–∫–µ–Ω–∏). –°—Ç–æ–ø –¥—É–º–∏—Ç–µ —Å–∞ —á–µ—Å—Ç–æ —Å—Ä–µ—â–∞–Ω–∏ –¥—É–º–∏ (–Ω–∞–ø—Ä. "–∏", "–Ω–∞", "–≤"), –∫–æ–∏—Ç–æ —Å–µ –ø—Ä–µ–º–∞—Ö–≤–∞—Ç, –∑–∞ –¥–∞ —Å–µ –ø–æ–¥–æ–±—Ä–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ—Ç–æ. –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è—Ç–∞ –≤–∫–ª—é—á–≤–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ –Ω–∞ –¥—É–º–∏—Ç–µ –¥–æ –æ—Å–Ω–æ–≤–Ω–∞—Ç–∞ –∏–º —Ñ–æ—Ä–º–∞ (–Ω–∞–ø—Ä. "—Ä–∞–±–æ—Ç–∏" ‚Üí "—Ä–∞–±–æ—Ç–∞").

```python
import re
from nltk.corpus import stopwords

def preprocess(text):
    words = re.findall(r'\w+', text.lower())
    stop_words = set(stopwords.words('english'))
    return [w for w in words if w not in stop_words]

text = "This is an example sentence to process."
print(preprocess(text))
```

### 3. –¢–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ –∏–∑–≤–ª–∏—á–∞–Ω–µ. –ö–æ—Ä–µ–∫—Ü–∏—è –Ω–∞ –ø—Ä–∞–≤–æ–ø–∏—Å–∞. –§–æ–Ω–µ—Ç–∏—á–Ω–∞ –∫–æ—Ä–µ–∫—Ü–∏—è.
–¢–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Ç–æ –∏–∑–≤–ª–∏—á–∞–Ω–µ –ø–æ–∑–≤–æ–ª—è–≤–∞ –Ω–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –¥—É–º–∏, –∫–æ–∏—Ç–æ —Å–∞ —Å—Ö–æ–¥–Ω–∏ –Ω–∞ –∑–∞–¥–∞–¥–µ–Ω–∏—Ç–µ, –¥–æ—Ä–∏ –∞–∫–æ —Å–∞ —Å–≥—Ä–µ—à–µ–Ω–∏. –ú–µ—Ç–æ–¥–∏—Ç–µ –≤–∫–ª—é—á–≤–∞—Ç –∫–æ—Ä–µ–∫—Ü–∏—è –Ω–∞ –ø—Ä–∞–≤–æ–ø–∏—Å–∞ —á—Ä–µ–∑ Levenshtein —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ, –∫–∞–∫—Ç–æ –∏ —Ñ–æ–Ω–µ—Ç–∏—á–Ω–∞ –∫–æ—Ä–µ–∫—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä –∞–ª–≥–æ—Ä–∏—Ç—ä–º–∞ Soundex).

```python
from fuzzywuzzy import process

words = ["information", "retrieval", "index", "search"]
query = "retrievel"
print(process.extractOne(query, words))  # ('retrieval', 90)
```

### 4. –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–∞–Ω–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏. –†–∞–∑–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ –∏ –¥–∏–Ω–∞–º–∏—á–Ω–∏ –∏–Ω–¥–µ–∫—Å–∏.
–ò–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ—Ç–æ –≤–∫–ª—é—á–≤–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏, –∫–æ–∏—Ç–æ —É—Å–∫–æ—Ä—è–≤–∞—Ç —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ. –†–∞–∑–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—Ç–µ –∏–Ω–¥–µ–∫—Å–∏ —Å–µ —Å—ä—Ö—Ä–∞–Ω—è–≤–∞—Ç –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω–∏ –∑–∞ –ø–æ-–¥–æ–±—Ä–∞ –º–∞—â–∞–±–∏—Ä—É–µ–º–æ—Å—Ç. –î–∏–Ω–∞–º–∏—á–Ω–∏—Ç–µ –∏–Ω–¥–µ–∫—Å–∏ –ø–æ–∑–≤–æ–ª—è–≤–∞—Ç –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Ä–µ–∞–ª–Ω–æ –≤—Ä–µ–º–µ –±–µ–∑ –∑–Ω–∞—á–∏—Ç–µ–ª–Ω–∏ –∑–∞–±–∞–≤—è–Ω–∏—è.

```python
class DynamicIndex:
    def __init__(self):
        self.index = {}
    
    def insert(self, word, doc_id):
        if word not in self.index:
            self.index[word] = []
        self.index[word].append(doc_id)

    def search(self, word):
        return self.index.get(word, [])
```

### 5. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏—á–Ω–æ –∏ –∑–æ–Ω–∞–ª–Ω–æ –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ. –ß–µ—Å—Ç–æ—Ç–∞ –∏ —Ç–µ–≥–ª–∞ –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∏—Ç–µ.
–ü–∞—Ä–∞–º–µ—Ç—Ä–∏—á–Ω–æ—Ç–æ –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ –ø–æ–∑–≤–æ–ª—è–≤–∞ —Ç—ä—Ä—Å–µ–Ω–µ –ø–æ –º–µ—Ç–∞–¥–∞–Ω–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä –¥–∞—Ç–∞, –∞–≤—Ç–æ—Ä). –ó–æ–Ω–∞–ª–Ω–æ—Ç–æ –∏–Ω–¥–µ–∫—Å–∏—Ä–∞–Ω–µ —Ä–∞–∑–≥—Ä–∞–Ω–∏—á–∞–≤–∞ —á–∞—Å—Ç–∏ –æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∑–∞–≥–ª–∞–≤–∏–µ, —Ç—è–ª–æ). –¢–µ—Ä–º–∏–Ω–∏—Ç–µ –ø–æ–ª—É—á–∞–≤–∞—Ç —Ç–µ–≥–ª–∞ –Ω–∞ –±–∞–∑–∞ —á–µ—Å—Ç–æ—Ç–∞ –Ω–∞ —Å—Ä–µ—â–∞–Ω–µ –∏ –¥—Ä—É–≥–∏ —Ñ–∞–∫—Ç–æ—Ä–∏.

```python
import math

def tf_idf(term_freq, doc_freq, total_docs):
    return term_freq * math.log(total_docs / (1 + doc_freq))
```

### 6. –í–µ–∫—Ç–æ—Ä–Ω–æ-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω –º–æ–¥–µ–ª.
–¢–æ–∑–∏ –º–æ–¥–µ–ª –ø—Ä–µ–¥—Å—Ç–∞–≤—è –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∏ –∑–∞–ø–∏—Ç–≤–∞–Ω–∏—è –∫–∞—Ç–æ –≤–µ–∫—Ç–æ—Ä–∏ –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –∫—ä–¥–µ—Ç–æ —Å—Ö–æ–¥—Å—Ç–≤–æ—Ç–æ —Å–µ –∏–∑–º–µ—Ä–≤–∞ —á—Ä–µ–∑ –∫–æ—Å–∏–Ω—É—Å–æ–≤–∞ –±–ª–∏–∑–æ—Å—Ç.

```python
from sklearn.feature_extraction.text import TfidfVectorizer

corpus = ["this is a document", "this document is about information retrieval"]
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(corpus)
print(X.toarray())
```

### 7. –û—Ü–µ–Ω–∫–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º–∏—Ç–µ –∑–∞ –ò–∑–ò–Ω—Ñ. –ú–µ—Ä–∫–∏.
–û—Ü–µ–Ω–∫–∞—Ç–∞ –≤–∫–ª—é—á–≤–∞ –º–µ—Ä–∫–∏ –∫–∞—Ç–æ precision, recall –∏ F1-score. –¢–µ–∑–∏ –º–µ—Ç—Ä–∏–∫–∏ –∏–∑–º–µ—Ä–≤–∞—Ç —Ç–æ—á–Ω–æ—Å—Ç—Ç–∞ –∏ –ø—ä–ª–Ω–æ—Ç–∞—Ç–∞ –Ω–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏.

```python
from sklearn.metrics import precision_score

y_true = [1, 1, 0, 1]
y_pred = [1, 0, 0, 1]
print(precision_score(y_true, y_pred))
```

### 8. –û–±—Ä–∞—Ç–Ω–∞ –≤—Ä—ä–∑–∫–∞ –∏ —Ä–∞–∑—à–∏—Ä—è–≤–∞–Ω–µ –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏.
–û–±—Ä–∞—Ç–Ω–∞—Ç–∞ –≤—Ä—ä–∑–∫–∞ –≤–∫–ª—é—á–≤–∞ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞—è–≤–∫–∏—Ç–µ –Ω–∞ –±–∞–∑–∞ –ø—Ä–µ–¥–∏—à–Ω–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏. –†–∞–∑—à–∏—Ä—è–≤–∞–Ω–µ—Ç–æ –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏ –¥–æ–±–∞–≤—è —Å–∏–Ω–æ–Ω–∏–º–∏ –∏–ª–∏ —Å–≤—ä—Ä–∑–∞–Ω–∏ —Ç–µ—Ä–º–∏–Ω–∏.

```python
def expand_query(query, synonyms):
    return query + " " + " ".join(synonyms.get(query, []))
```

### 9. –ò–∑–≤–ª–∏—á–∞–Ω–µ –æ—Ç XML –¥–æ–∫—É–º–µ–Ω—Ç–∏.
XML –¥–æ–∫—É–º–µ–Ω—Ç–∏ –º–æ–≥–∞—Ç –¥–∞ –±—ä–¥–∞—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–≤–∞–Ω–∏ —á—Ä–µ–∑ –ø–∞—Ä—Å–µ—Ä–∏ –∫–∞—Ç–æ ElementTree.

```python
import xml.etree.ElementTree as ET

tree = ET.parse('data.xml')
root = tree.getroot()
for elem in root.findall('document'):
    print(elem.text)
```

### 10. –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–∏ –º–æ–¥–µ–ª–∏ –≤ –ò–∑–≤–ª–∏—á–∞–Ω–µ—Ç–æ –Ω–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
–¢–µ–∑–∏ –º–æ–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–∞–≤–∞—Ç —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ –Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç –¥–∞ –µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω —Å–ø—Ä—è–º–æ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ.

```python
def probabilistic_ranking(term_prob, doc_relevance):
    return term_prob * doc_relevance
```

---

–¢–æ–≤–∞ –æ–±–æ–±—â–µ–Ω–∏–µ –≤–∫–ª—é—á–≤–∞ —Ç–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫–æ–¥–æ–≤–∏ –ø—Ä–∏–º–µ—Ä–∏ –∑–∞ –≤—Å—è–∫–∞ —Ç–µ–º–∞. –ê–∫–æ –∏–º–∞—à –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∏ –≤—ä–ø—Ä–æ—Å–∏ –∏–ª–∏ –∏—Å–∫–∞—à –ø–æ–≤–µ—á–µ –¥–µ—Ç–∞–π–ª–∏, –ø–∏—Ç–∞–π! üöÄ

